plugins {
    id('com.android.application')
}


java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(11))
        vendor.set(JvmVendorSpec.AMAZON)
    }
}

apply from: "${rootDir}/gradle/android.gradle"


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    coreLibraryDesugaring libs.desugar.jdk.libs

    implementation project(":AirSendCore")

    // region shared libraries
    implementation libs.common
    implementation libs.dialogs
    implementation libs.file
    implementation libs.keyboard
    implementation libs.time
    // endregion

    implementation(libs.guava)
    implementation(libs.commons.lang3)


    implementation libs.constraintlayout
    implementation libs.appcompat
    implementation libs.legacy.support.v4
    implementation libs.lifecycle.livedata
    implementation libs.lifecycle.viewmodel
    implementation libs.androidx.navigation.fragment
    implementation libs.navigation.ui
    implementation libs.material

    implementation libs.androidx.fragment
    implementation libs.androidx.recyclerview

    implementation libs.androidx.lifecycle.extensions
    implementation libs.androidx.lifecycle.common.java8
    implementation libs.androidx.lifecycle.viewmodel.savedstate


    //region  *******************************
    implementation 'xmlpull:xmlpull:1.1.3.4d_b4_min'


    // jUnit
    def jupiter = '5.7.1'
    testImplementation libs.junit.vintage.engine
    testImplementation libs.junit.jupiter.params
    testImplementation libs.junit.jupiter.api
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$jupiter"
    testImplementation libs.junit

    androidTestImplementation 'org.junit.jupiter:junit-jupiter'
    androidTestImplementation libs.junit.jupiter.params
    androidTestRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$jupiter"
    androidTestImplementation libs.junit.jupiter.api
    androidTestImplementation libs.junit

    androidTestImplementation libs.androidx.junit


    androidTestImplementation libs.mockito.core
    androidTestImplementation libs.dexmaker.mockito


    //androidx test
    testImplementation(libs.androidx.core) {
        exclude group: 'xpp3', module: 'xpp3'
    }
    androidTestImplementation(libs.androidx.core) {
        exclude group: 'xpp3', module: 'xpp3'
    }

    androidTestUtil libs.androidx.orchestrator
    androidTestImplementation libs.androidx.runner
    androidTestImplementation libs.androidx.uiautomator
    androidTestImplementation libs.androidx.rules


    // testing framework
    // well, cannot run Espresso because of these imports. https://stackoverflow.com/a/63768995/4673960 .
    // Should not be throwing errors, but it is.
    // testImplementation "org.robolectric:robolectric:4.5.1"
    // androidTestImplementation ("org.robolectric:robolectric:4.5.1") {
    //     exclude group: "org.apache.maven.wagon"
    //     exclude group: "org.apache.maven"
    // }
    androidTestImplementation 'org.hamcrest:hamcrest-library:2.2'


    //truth, assertions
    androidTestImplementation libs.androidx.truth
    testImplementation libs.google.truth

    // Espresso dependencies
    androidTestImplementation libs.bundles.espresso

    //endregion *******************************


    // region QR recognition ********************************************************************************
    implementation 'com.google.android.gms:play-services-vision:20.1.3'
    implementation 'com.github.kenglxn.QRGen:android:2.6.0'
    //endregion *********************************************************************************************


    implementation 'com.jakewharton.timber:timber:4.7.1'
    implementation 'com.github.T-Spoon:Benchit:v1.0.2'


    // region security, encryption **************************************************************************
    // for TLS 1.3 on Android versions < 29
    implementation 'org.conscrypt:conscrypt-android:2.5.1'
    implementation 'com.google.android.gms:play-services-auth:20.0.1'
    // endregion ********************************************************************************************


    // region Room DB ***************************************************************************************
    def room_version = "2.5.0"
    implementation libs.androidx.room.runtime
    annotationProcessor "androidx.room:room-compiler:$room_version"
    implementation libs.androidx.room.rxjava3
    // endregion ********************************************************************************************


    implementation libs.rxandroid
    // Because RxAndroid releases are few and far between, it is recommended you also
    // explicitly depend on RxJava's latest version for bug fixes and new features.
    // (see https://github.com/ReactiveX/RxJava/releases for latest 3.x.x version)
    implementation libs.rxjava
    implementation libs.rxbinding
}