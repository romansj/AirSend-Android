// Microbenchmark

plugins {
    alias(libs.plugins.android.library)
    alias(libs.plugins.benchmark)
}

android {
    namespace 'com.cherrydev.benchmark'
    compileSdk 34

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    defaultConfig {
        minSdk 28
        targetSdk 34

        testInstrumentationRunner 'androidx.benchmark.junit4.AndroidBenchmarkRunner'
        // Enable measuring on an emulator, or devices with low battery
        testInstrumentationRunnerArguments["androidx.benchmark.suppressErrors"] = "EMULATOR,LOW-BATTERY"
    }


    testBuildType = "release"
    buildTypes {
        debug {
            // Since debuggable can"t be modified by gradle for library modules,
            // it must be done in a manifest - see src/androidTest/AndroidManifest.xml
            minifyEnabled true
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "benchmark-proguard-rules.pro"
        }
        release {
            isDefault = true
        }
    }
}

dependencies {
    androidTestImplementation libs.androidx.runner
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.junit
    androidTestImplementation libs.androidx.benchmark.junit4

    implementation(libs.airsend.core.java)

    implementation(libs.guava)
    implementation(libs.commons.lang3)
    implementation(libs.commons.text)
    implementation(libs.gson)
    // Add your dependencies here. Note that you cannot benchmark code
    // in an app module this way - you will need to move any code you
    // want to benchmark to a library module:
    // https://developer.android.com/studio/projects/android-library#Convert

}